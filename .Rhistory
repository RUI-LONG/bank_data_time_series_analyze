View(data_loc[1,])
View(data_loc[0,])
Taipei <- Taipei[,c(1:length(Taipei))]
Taipei
View(Taipei)
Taipei <- Taipei[,c('a','cs'))]
Taipei <- Taipei[,c('a','cs')]
Taipei <- Taipei[,c(str(1:length(Taipei)))]
View(Taipei)
Taipei <- Taipei[,c(str(1:length(Taipei)))]
Taipei <- Taipei[,c('(1:length(Taipei)'))]
View(Taipei)
Taipei <- Taipei[,c('(1:length(Taipei)')]
View(Taipei)
View(Taipei1)
Taipei1 <- Taipei[,c('(1:length(Taipei)')]
View(Taipei1)
apply(Taipei[0,],1,FUN=convert_title)
convert_title <- function(title){
#title <- gsub("月","",gsub("年","-",title))
print(title)
}
apply(Taipei[0,],1,FUN=convert_title)
convert_title(Taipei[0,]
convert_title(Taipei[0,])
convert_title(Taipei[0,])
library(readxl)
library(stringr)
library(shiny)
library(ggplot2)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("ggplot_waterfall.R")
## Check data dimension
#dim(data_mct)
#dim(data_loc)
#dim(merged_data)
merged_data = rbind(data_mct, data_loc)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","-",date))
return(date)
}
convert_title <- function(title){
#title <- gsub("月","",gsub("年","-",title))
print( match("title",names(title)))
}
convert_title(Taipei[0,])
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
View(Taipei[1:1, ])
print(length(Taipei[1, ]))
Taipei1 <- Taipei[,c('(1:length(Taipei)')]
View(Taipei1)
# Visualization
# creating some data
set.seed(1)
#dfData = data.frame(x = 1:61,
#                    y = Taipei[1:61,3])
# base plot
p1 = ggplot_waterfall(
dtData = Taipei,
xlab="X axis title",
ylab="Y axis title",
'x',
'y'
)
# adding some formatting
p1
xlab(NULL) +
ylab(NULL)
convert_title <- function(title){
#title <- gsub("月","",gsub("年","-",title))
print( match(title, names(Taipei)))
}
convert_title(Taipei[0,])
#title <- gsub("月","",gsub("年","-",title))
for(i in c(1:86)){
print( title[i,])
}
tle){
#title <- gsub("月","",gsub("年","-",title))
for(i in c(1:86)){
print( title[i,])
}
}
convert_title(Taipei[0,])
convert_title <- function(title){
#title <- gsub("月","",gsub("年","-",title))
for(i in c(1:86)){
print( title[i,])
}
}
convert_title(Taipei[0,])
convert_title <- function(title){
#title <- gsub("月","",gsub("年","-",title))
print(title)
}
convert_title(Taipei[0,])
#title <- gsub("月","",gsub("年","-",title))
print(title[0])
convert_title <- function(title){
#title <- gsub("月","",gsub("年","-",title))
print(title[0])
}
convert_title(Taipei[0,])
convert_title <- function(title){
#title <- gsub("月","",gsub("年","-",title))
print(title[,0])
}
convert_title(Taipei[0,])
convert_title <- function(title){
#title <- gsub("月","",gsub("年","-",title))
print(title[0,])
}
convert_title(Taipei[0,])
<- function(title){
#title <- gsub("月","",gsub("年","-",title))
for(i in title){
print(i)
}
}
convert_title(Taipei[0,])
convert_title <- function(title){
#title <- gsub("月","",gsub("年","-",title))
for(i in title){
print(i, '87')
}
}
convert_title(Taipei[0,])
print(i)
convert_title <- function(title){
#title <- gsub("月","",gsub("年","-",title))
for(i in title){
print(i)
print('78')
}
}
convert_title(Taipei[0,])
vert_title <- function(title){
#title <- gsub("月","",gsub("年","-",title))
for(i in title){
print(i)
}
}
convert_title(Taipei[0,])
library(readxl)
library(stringr)
library(shiny)
library(ggplot2)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("ggplot_waterfall.R")
## Check data dimension
#dim(data_mct)
#dim(data_loc)
#dim(merged_data)
merged_data = rbind(data_mct, data_loc)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","-",date))
return(date)
}
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
#View(Taipei[1:1, ])
print(length(Taipei[1, ]))
# Visualization
# creating some data
set.seed(1)
#dfData = data.frame(x = 1:61,
#                    y = Taipei[1:61,3])
# base plot
p1 = ggplot_waterfall(
dtData = Taipei,
xlab="X axis title",
ylab="Y axis title",
'x',
'y'
)
# adding some formatting
p1
xlab(NULL) +
ylab(NULL)
Taipei$食品餐飲類博士[筆數]
Taipei$'食品餐飲類博士[筆數]'
Taipei$0
Taipei[1,4]
mm1 <- as.matrix(Taipei[1,4])
print(mm1)
print(mm1)
mm1 <- as.matrix(Taipei[1,4])
mm2 <- matrix(mm1, ncol = ncol(dd), dimnames = NULL)
print(mm2)
mm2 <- matrix(mm1, ncol = ncol(Taipei[1,4]), dimnames = NULL)
print(mm2)
names(Taipei) <- NULL
Taipei
Veiw(Taipei)
View(Taipei)
library(readxl)
library(stringr)
library(shiny)
library(ggplot2)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("ggplot_waterfall.R")
## Check data dimension
#dim(data_mct)
#dim(data_loc)
#dim(merged_data)
merged_data = rbind(data_mct, data_loc)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","-",date))
return(date)
}
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
#View(Taipei[1:1, ])
# Convert title to null
names(Taipei) <- NULL
View(Taipei)
# Visualization
# creating some data
set.seed(1)
dfData = data.frame(x = 1:61,
y = Taipei[1:61,3])
# base plot
p1 = ggplot_waterfall(
dtData = Taipei,
'x',
'V2'
)
# adding some formatting
p1
xlab(NULL) +
ylab(NULL)
library(readxl)
library(stringr)
library(shiny)
library(ggplot2)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("ggplot_waterfall.R")
## Check data dimension
#dim(data_mct)
#dim(data_loc)
#dim(merged_data)
merged_data = rbind(data_mct, data_loc)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","-",date))
return(date)
}
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
#View(Taipei[1:1, ])
# Convert title to null
names(Taipei) <- NULL
View(Taipei)
# Visualization
# creating some data
set.seed(1)
dfData = data.frame(x = 1:61,
y = Taipei[1:61,3])
# base plot
p1 = ggplot_waterfall(
dtData = Taipei,
'x',
'V3'
)
# adding some formatting
p1
xlab(NULL) +
ylab(NULL)
library(readxl)
library(stringr)
library(shiny)
library(ggplot2)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("ggplot_waterfall.R")
## Check data dimension
#dim(data_mct)
#dim(data_loc)
#dim(merged_data)
merged_data = rbind(data_mct, data_loc)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","-",date))
return(date)
}
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
#View(Taipei[1:1, ])
# Convert title to null
names(Taipei) <- NULL
View(Taipei)
# Visualization
# creating some data
set.seed(1)
dfData = data.frame(x = 1:61,
y = Taipei[1:61,3])
# base plot
p1 = ggplot_waterfall(
dtData = Taipei,
'x',
'V3'
)
# adding some formatting
p1
xlab(NULL) +
ylab(NULL)
View(dfData)
library(readxl)
library(stringr)
library(shiny)
library(ggplot2)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("ggplot_waterfall.R")
## Check data dimension
#dim(data_mct)
#dim(data_loc)
#dim(merged_data)
merged_data = rbind(data_mct, data_loc)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","-",date))
return(date)
}
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
#View(Taipei[1:1, ])
# Convert title to null
names(Taipei) <- NULL
View(Taipei)
# Visualization
# creating some data
set.seed(1)
dfData = data.frame(x = 1:61,
y = Taipei[1:61,3])
# base plot
p1 = ggplot_waterfall(
dtData = Taipei,
'x',
'y'
)
# adding some formatting
p1
xlab(NULL) +
ylab(NULL)
library(readxl)
library(stringr)
library(shiny)
library(ggplot2)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/ggplot_waterfall.R")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/stat_steamgraph.R")
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","-",date))
return(date)
}
merged_data = rbind(data_mct, data_loc)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
N_Taipei <- merged_data[grep("新北市", merged_data$地區), ]
Taoyuan <- merged_data[grep("桃園市", merged_data$地區), ]
Taichung <- merged_data[grep("台中市", merged_data$地區), ]
Tainan <- merged_data[grep("台南市", merged_data$地區), ]
Kaohsiung <- merged_data[grep("高雄市", merged_data$地區), ]
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
N_Taipei[,1] <- apply(N_Taipei[,1],1,FUN=AD_convert)
Taoyuan[,1] <- apply(Taoyuan[,1],1,FUN=AD_convert)
Taichung[,1] <- apply(Taichung[,1],1,FUN=AD_convert)
Tainan[,1] <- apply(Tainan[,1],1,FUN=AD_convert)
Kaohsiung[,1] <- apply(Kaohsiung[,1],1,FUN=AD_convert)
#View(Taipei[1:1, ])
# Convert title to null
names(Taipei) <- NULL
names(N_Taipei) <- NULL
names(Taoyuan) <- NULL
names(Taichung) <- NULL
names(Tainan) <- NULL
names(Kaohsiung) <- NULL
# Visualization
# creating some data
# convert from exponential notation to normal notation
options(scipen = 999)
dfData = data.frame(x = 1:61,
y = Taipei[1:61,3])
p1 = ggplot_waterfall(
dtData = dfData,
'x',
'y'
)
p1 +
xlab('時間') +
ylab('筆數')
# creating some data
set.seed(10)
dtData = data.frame(
Time = 1:61,
Signal =
c(
as.numeric(as.character(unlist(Taipei[1:61,3]))),
as.numeric(as.character(unlist(N_Taipei[1:61,3]))),
as.numeric(as.character(unlist(Taoyuan[1:61,3]))),
as.numeric(as.character(unlist(Taichung[1:61,3]))),
as.numeric(as.character(unlist(Tainan[1:61,3]))),
as.numeric(as.character(unlist(Kaohsiung[1:61,3])))
),
VariableLabel = c(rep('Class A', 61))
)
# base plot
p2 = ggplot(dtData, aes(x = Time, y = Signal, group = VariableLabel, fill = VariableLabel)) +
stat_steamgraph()
# adding some formatting
p2 +
xlab(NULL) +
ylab(NULL)
library(readxl)
library(stringr)
library(shiny)
library(ggplot2)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/ggplot_waterfall.R")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/stat_steamgraph.R")
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","-",date))
return(date)
}
merged_data = rbind(data_mct, data_loc)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
N_Taipei <- merged_data[grep("新北市", merged_data$地區), ]
Taoyuan <- merged_data[grep("桃園市", merged_data$地區), ]
Taichung <- merged_data[grep("台中市", merged_data$地區), ]
Tainan <- merged_data[grep("台南市", merged_data$地區), ]
Kaohsiung <- merged_data[grep("高雄市", merged_data$地區), ]
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
N_Taipei[,1] <- apply(N_Taipei[,1],1,FUN=AD_convert)
Taoyuan[,1] <- apply(Taoyuan[,1],1,FUN=AD_convert)
Taichung[,1] <- apply(Taichung[,1],1,FUN=AD_convert)
Tainan[,1] <- apply(Tainan[,1],1,FUN=AD_convert)
Kaohsiung[,1] <- apply(Kaohsiung[,1],1,FUN=AD_convert)
#View(Taipei[1:1, ])
# Convert title to null
names(Taipei) <- NULL
names(N_Taipei) <- NULL
names(Taoyuan) <- NULL
names(Taichung) <- NULL
names(Tainan) <- NULL
names(Kaohsiung) <- NULL
# Visualization
# creating some data
# convert from exponential notation to normal notation
options(scipen = 999)
dfData = data.frame(x = 1:61,
y = Taipei[1:61,3])
p1 = ggplot_waterfall(
dtData = dfData,
'x',
'y'
)
p1 +
xlab('時間') +
ylab('筆數')
# creating some data
set.seed(10)
dtData = data.frame(
Time = 1:61,
Signal =
c(
as.numeric(as.character(unlist(Taipei[1:61,3]))),
as.numeric(as.character(unlist(N_Taipei[1:61,3]))),
as.numeric(as.character(unlist(Taoyuan[1:61,3]))),
as.numeric(as.character(unlist(Taichung[1:61,3]))),
as.numeric(as.character(unlist(Tainan[1:61,3]))),
as.numeric(as.character(unlist(Kaohsiung[1:61,3])))
),
VariableLabel = c(rep('Class A', 61))
)
# base plot
p2 = ggplot(dtData, aes(x = Time, y = Signal,
group = VariableLabel, fill = VariableLabel)) +stat_steamgraph()
# adding some formatting
p2 +
xlab(NULL) +
ylab(NULL)
library(ggproto)
install.packages(ggproto)
install.packages('ggproto')
