rep('高雄市', 61))
)
shinyServer (
function (input,output,session){
output$employee <- renderUI({
selectInput("Employee", "Please Select An Employee Number:",
choices = c('台北市','新北市', '桃園市', '台中市',
'台南市', '高雄市'))
})
output$linetype <- renderUI({
selectInput("Linetype", "Please Select An Employee Number:",
choices = c('l','2', '3'))
})
output$symbol <- renderUI({
if (!is.null(input$Employee)){
selectInput ("Symbol", "Please Select Salary Symbol:",
choices = sort(unique(data[data$EmpNum == input$Employee, ]$Sym)))
}
})
output$myPlot <- renderPlot({
seData  <- dtData[dtData$VariableLabel == input$Employee, 2]
Et  <- ts(seData, start=1,end=61)
plot(seData, col="blue", type="l")
})
})
#View(dtData[dtData$VariableLabel == '台北市', 2])
runApp("E:/bank_data_time_series_analyze")
dtData = data.frame(
Time = 1:61,
Signal =
c(
as.numeric(as.character(unlist(Taipei[1:61]))),
as.numeric(as.character(unlist(N_Taipei[1:61,4]))),
as.numeric(as.character(unlist(Taoyuan[1:61,4]))),
as.numeric(as.character(unlist(Taichung[1:61,4]))),
as.numeric(as.character(unlist(Tainan[1:61,4]))),
as.numeric(as.character(unlist(Kaohsiung[1:61,4])))
),
VariableLabel = c(rep('台北市', 61),
rep('新北市', 61), rep('桃園市', 61),
rep('台中市', 61), rep('台南市', 61),
rep('高雄市', 61))
)
library(xts)
library(Rcpp)
library(shiny)
library(tidyr)
library(dplyr)
library(readxl)
library(stringr)
library(ggplot2)
library(TSstudio)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/ggplot_waterfall.R")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/stat_steamgraph.R")
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","/",date))
return(date)
}
Taipei_convert <- function(city){
city <- gsub("台北市","Taipei",city)
return(city)
}
merged_data = rbind(data_mct, data_loc)
#merged_data[,2] <- apply(merged_data[,2],1,FUN=Taipei_convert)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
N_Taipei <- merged_data[grep("新北市", merged_data$地區), ]
Taoyuan <- merged_data[grep("桃園市", merged_data$地區), ]
Taichung <- merged_data[grep("台中市", merged_data$地區), ]
Tainan <- merged_data[grep("台南市", merged_data$地區), ]
Kaohsiung <- merged_data[grep("高雄市", merged_data$地區), ]
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
N_Taipei[,1] <- apply(N_Taipei[,1],1,FUN=AD_convert)
Taoyuan[,1] <- apply(Taoyuan[,1],1,FUN=AD_convert)
Taichung[,1] <- apply(Taichung[,1],1,FUN=AD_convert)
Tainan[,1] <- apply(Tainan[,1],1,FUN=AD_convert)
Kaohsiung[,1] <- apply(Kaohsiung[,1],1,FUN=AD_convert)
# Convert title to null
#names(Taipei) <- c(1:length(Taipei))
names(Taipei) <- NULL
names(N_Taipei) <- NULL
names(Taoyuan) <- NULL
names(Taichung) <- NULL
names(Tainan) <- NULL
names(Kaohsiung) <- NULL
dtData = data.frame(
Time = 1:61,
Signal =
c(
as.numeric(as.character(unlist(Taipei[1:61,3]))),
as.numeric(as.character(unlist(N_Taipei[1:61,4]))),
as.numeric(as.character(unlist(Taoyuan[1:61,4]))),
as.numeric(as.character(unlist(Taichung[1:61,4]))),
as.numeric(as.character(unlist(Tainan[1:61,4]))),
as.numeric(as.character(unlist(Kaohsiung[1:61,4])))
),
VariableLabel = c(rep('台北市', 61),
rep('新北市', 61), rep('桃園市', 61),
rep('台中市', 61), rep('台南市', 61),
rep('高雄市', 61))
)
shinyServer (
function (input,output,session){
output$employee <- renderUI({
selectInput("Employee", "Please Select An Employee Number:",
choices = c('台北市','新北市', '桃園市', '台中市',
'台南市', '高雄市'))
})
output$linetype <- renderUI({
selectInput("Linetype", "Please Select An Employee Number:",
choices = c('l','2', '3'))
})
output$symbol <- renderUI({
if (!is.null(input$Employee)){
selectInput ("Symbol", "Please Select Salary Symbol:",
choices = sort(unique(data[data$EmpNum == input$Employee, ]$Sym)))
}
})
output$myPlot <- renderPlot({
seData  <- dtData[dtData$VariableLabel == input$Employee, 2]
Et  <- ts(seData, start=1,end=61)
plot(seData, col="blue", type="l")
})
})
#View(dtData[dtData$VariableLabel == '台北市', 2])
dtData = data.frame(
Time = 1:61,
Signal =
c(
as.numeric(as.character(unlist(Taipei[1:61,3]))),
as.numeric(as.character(unlist(N_Taipei[1:61,4]))),
as.numeric(as.character(unlist(Taoyuan[1:61,4]))),
as.numeric(as.character(unlist(Taichung[1:61,4]))),
as.numeric(as.character(unlist(Tainan[1:61,4]))),
as.numeric(as.character(unlist(Kaohsiung[1:61,4])))
),
Taipei[1:61,3]
VariableLabel = c(rep('台北市', 61),
rep('新北市', 61), rep('桃園市', 61),
rep('台中市', 61), rep('台南市', 61),
rep('高雄市', 61))
)
Taipei[1:61,3]
= data.frame(
Time = 1:61,
Signal =
c(
as.numeric(as.character(unlist(Taipei[1:61,3:86]))),
as.numeric(as.character(unlist(N_Taipei[1:61,3:86]))),
as.numeric(as.character(unlist(Taoyuan[1:61,3:86]))),
as.numeric(as.character(unlist(Taichung[1:61,3:86]))),
as.numeric(as.character(unlist(Tainan[1:61,3:86]))),
as.numeric(as.character(unlist(Kaohsiung[1:61,3:86])))
),
VariableLabel = c(rep('台北市', 61),
rep('新北市', 61), rep('桃園市', 61),
rep('台中市', 61), rep('台南市', 61),
rep('高雄市', 61))
)
dtData = data.frame(
Time = 1:61,
Signal =
c(
as.numeric(as.character(unlist(Taipei[1:61,3:86]))),
as.numeric(as.character(unlist(N_Taipei[1:61,3:86]))),
as.numeric(as.character(unlist(Taoyuan[1:61,3:86]))),
as.numeric(as.character(unlist(Taichung[1:61,3:86]))),
as.numeric(as.character(unlist(Tainan[1:61,3:86]))),
as.numeric(as.character(unlist(Kaohsiung[1:61,3:86])))
),
library(xts)
library(Rcpp)
library(shiny)
library(tidyr)
library(dplyr)
library(readxl)
library(stringr)
library(ggplot2)
library(TSstudio)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/ggplot_waterfall.R")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/stat_steamgraph.R")
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","/",date))
return(date)
}
Taipei_convert <- function(city){
city <- gsub("台北市","Taipei",city)
return(city)
}
merged_data = rbind(data_mct, data_loc)
#merged_data[,2] <- apply(merged_data[,2],1,FUN=Taipei_convert)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
N_Taipei <- merged_data[grep("新北市", merged_data$地區), ]
Taoyuan <- merged_data[grep("桃園市", merged_data$地區), ]
Taichung <- merged_data[grep("台中市", merged_data$地區), ]
Tainan <- merged_data[grep("台南市", merged_data$地區), ]
Kaohsiung <- merged_data[grep("高雄市", merged_data$地區), ]
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
N_Taipei[,1] <- apply(N_Taipei[,1],1,FUN=AD_convert)
Taoyuan[,1] <- apply(Taoyuan[,1],1,FUN=AD_convert)
Taichung[,1] <- apply(Taichung[,1],1,FUN=AD_convert)
Tainan[,1] <- apply(Tainan[,1],1,FUN=AD_convert)
Kaohsiung[,1] <- apply(Kaohsiung[,1],1,FUN=AD_convert)
# Convert title to null
#names(Taipei) <- c(1:length(Taipei))
names(Taipei) <- NULL
names(N_Taipei) <- NULL
names(Taoyuan) <- NULL
names(Taichung) <- NULL
names(Tainan) <- NULL
names(Kaohsiung) <- NULL
dtData = data.frame(
Time = 1:61,
Signal =
c(
as.numeric(as.character(unlist(Taipei[1:61,3:86]))),
as.numeric(as.character(unlist(N_Taipei[1:61,3:86]))),
as.numeric(as.character(unlist(Taoyuan[1:61,3:86]))),
as.numeric(as.character(unlist(Taichung[1:61,3:86]))),
as.numeric(as.character(unlist(Tainan[1:61,3:86]))),
as.numeric(as.character(unlist(Kaohsiung[1:61,3:86])))
),
VariableLabel = c(rep('台北市', 61),
rep('新北市', 61), rep('桃園市', 61),
rep('台中市', 61), rep('台南市', 61),
rep('高雄市', 61))
)
shinyServer (
function (input,output,session){
output$employee <- renderUI({
selectInput("Employee", "Please Select An Employee Number:",
choices = c('台北市','新北市', '桃園市', '台中市',
'台南市', '高雄市'))
})
output$linetype <- renderUI({
selectInput("Linetype", "Please Select An Employee Number:",
choices = c('l','2', '3'))
})
output$symbol <- renderUI({
if (!is.null(input$Employee)){
selectInput ("Symbol", "Please Select Salary Symbol:",
choices = sort(unique(data[data$EmpNum == input$Employee, ]$Sym)))
}
})
output$myPlot <- renderPlot({
seData  <- dtData[dtData$VariableLabel == input$Employee, 2]
Et  <- ts(seData, start=1,end=61)
plot(seData, col="blue", type="l")
})
})
#View(dtData[dtData$VariableLabel == '台北市', 2])
runApp("E:/bank_data_time_series_analyze")
View(dtData[dtData$VariableLabel == '台北市', ])
View(dtData)
z = c("a","b","c")
res <- lapply(z, function(ch) grep("a", ch))
res
grep("a", z)
grep("食品餐飲類博士", z)
grep("[筆數]", z)
x <- c(1,2.3,2,3,4,8,12,43,-4,-1,NA)
order(x)
library(xts)
library(Rcpp)
library(shiny)
library(tidyr)
library(dplyr)
library(readxl)
library(stringr)
library(ggplot2)
library(TSstudio)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/ggplot_waterfall.R")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/stat_steamgraph.R")
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","/",date))
return(date)
}
Taipei_convert <- function(city){
city <- gsub("台北市","Taipei",city)
return(city)
}
merged_data = rbind(data_mct, data_loc)
#merged_data[,2] <- apply(merged_data[,2],1,FUN=Taipei_convert)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
N_Taipei <- merged_data[grep("新北市", merged_data$地區), ]
Taoyuan <- merged_data[grep("桃園市", merged_data$地區), ]
Taichung <- merged_data[grep("台中市", merged_data$地區), ]
Tainan <- merged_data[grep("台南市", merged_data$地區), ]
Kaohsiung <- merged_data[grep("高雄市", merged_data$地區), ]
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
N_Taipei[,1] <- apply(N_Taipei[,1],1,FUN=AD_convert)
Taoyuan[,1] <- apply(Taoyuan[,1],1,FUN=AD_convert)
Taichung[,1] <- apply(Taichung[,1],1,FUN=AD_convert)
Tainan[,1] <- apply(Tainan[,1],1,FUN=AD_convert)
Kaohsiung[,1] <- apply(Kaohsiung[,1],1,FUN=AD_convert)
# Convert title to null
#names(Taipei) <- c(1:length(Taipei))
names(Taipei) <- NULL
names(N_Taipei) <- NULL
names(Taoyuan) <- NULL
names(Taichung) <- NULL
names(Tainan) <- NULL
names(Kaohsiung) <- NULL
dtData = data.frame(
Time = 1:61,
Signal =
c(
as.numeric(as.character(unlist(Taipei[1:61,]))),
as.numeric(as.character(unlist(N_Taipei[1:61,]))),
as.numeric(as.character(unlist(Taoyuan[1:61,]))),
as.numeric(as.character(unlist(Taichung[1:61,]))),
as.numeric(as.character(unlist(Tainan[1:61,]))),
as.numeric(as.character(unlist(Kaohsiung[1:61,])))
),
VariableLabel = c(rep('台北市', 61),
rep('新北市', 61), rep('桃園市', 61),
rep('台中市', 61), rep('台南市', 61),
rep('高雄市', 61))
)
shinyServer (
function (input,output,session){
output$employee <- renderUI({
selectInput("Employee", "Please Select An Employee Number:",
choices = c('台北市','新北市', '桃園市', '台中市',
'台南市', '高雄市'))
})
output$linetype <- renderUI({
selectInput("Linetype", "Please Select An Employee Number:",
choices = c('l', '2', '3'))
})
output$symbol <- renderUI({
if (!is.null(input$Employee)){
selectInput ("Symbol", "Please Select Salary Symbol:",
choices = sort(unique(data[data$EmpNum == input$Employee, ]$Sym)))
}
})
output$myPlot <- renderPlot({
seData  <- dtData[dtData$VariableLabel == input$Employee, 2]
Et  <- ts(seData, start=1,end=61)
plot(seData, col="blue", type="l")
})
})
#View(dtData[dtData$VariableLabel == '台北市', ])
View(dtData)
View(dtData)
View(dtData)
cbind(dtData, Taipei[1:61,3:86])
View(cbind(dtData, Taipei[1:61,3:86]))
View(cbind(dtData, merged_data[1:61,3:86]))
View(cbind(dtData, merged_data[1:61,3:87]))
86
View(cbind(dtData, merged_data[1:61,3:86]))
View(cbind(dtData, merged_data[1:61,3:87]))
library(xts)
library(Rcpp)
library(shiny)
library(tidyr)
library(dplyr)
library(readxl)
library(stringr)
library(ggplot2)
library(TSstudio)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/ggplot_waterfall.R")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/stat_steamgraph.R")
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","/",date))
return(date)
}
Taipei_convert <- function(city){
city <- gsub("台北市","Taipei",city)
return(city)
}
merged_data = rbind(data_mct, data_loc)
#merged_data[,2] <- apply(merged_data[,2],1,FUN=Taipei_convert)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
N_Taipei <- merged_data[grep("新北市", merged_data$地區), ]
Taoyuan <- merged_data[grep("桃園市", merged_data$地區), ]
Taichung <- merged_data[grep("台中市", merged_data$地區), ]
Tainan <- merged_data[grep("台南市", merged_data$地區), ]
Kaohsiung <- merged_data[grep("高雄市", merged_data$地區), ]
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
N_Taipei[,1] <- apply(N_Taipei[,1],1,FUN=AD_convert)
Taoyuan[,1] <- apply(Taoyuan[,1],1,FUN=AD_convert)
Taichung[,1] <- apply(Taichung[,1],1,FUN=AD_convert)
Tainan[,1] <- apply(Tainan[,1],1,FUN=AD_convert)
Kaohsiung[,1] <- apply(Kaohsiung[,1],1,FUN=AD_convert)
# Convert title to null
#names(Taipei) <- c(1:length(Taipei))
names(Taipei) <- NULL
names(N_Taipei) <- NULL
names(Taoyuan) <- NULL
names(Taichung) <- NULL
names(Tainan) <- NULL
names(Kaohsiung) <- NULL
dtData = data.frame(
Time = 1:61,
Signal =
c(
as.numeric(as.character(unlist(Taipei[1:61,3:86]))),
as.numeric(as.character(unlist(N_Taipei[1:61,3:86]))),
as.numeric(as.character(unlist(Taoyuan[1:61,3:86]))),
as.numeric(as.character(unlist(Taichung[1:61,3:86]))),
as.numeric(as.character(unlist(Tainan[1:61,3:86]))),
as.numeric(as.character(unlist(Kaohsiung[1:61,3:86])))
),
VariableLabel = c(rep('台北市', 61),
rep('新北市', 61), rep('桃園市', 61),
rep('台中市', 61), rep('台南市', 61),
rep('高雄市', 61))
)
dtData <- cbind(dtData, merged_data[1:61,3:86])
shinyServer (
function (input,output,session){
output$employee <- renderUI({
selectInput("Employee", "Please Select An Employee Number:",
choices = c('台北市','新北市', '桃園市', '台中市',
'台南市', '高雄市'))
})
output$linetype <- renderUI({
selectInput("Linetype", "Please Select An Employee Number:",
choices = c('l', '2', '3'))
})
output$symbol <- renderUI({
if (!is.null(input$Employee)){
selectInput ("Symbol", "Please Select Salary Symbol:",
choices = sort(unique(data[data$EmpNum == input$Employee, ]$Sym)))
}
})
output$myPlot <- renderPlot({
seData  <- dtData[dtData$VariableLabel == input$Employee, 2]
Et  <- ts(seData, start=1,end=61)
plot(seData, col="blue", type="l")
})
})
#View(dtData[dtData$VariableLabel == '台北市', ])
#View(dtData)
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
'台北市'
View(dtData[dtData$VariableLabel == '台北市', 2])
View(dtData[dtData$VariableLabel == '台北市'] $'食品餐飲類博士[筆數]
')
View(dtData[dtData$VariableLabel == '台北市'] $'食品餐飲類博士[筆數]')
View(dtData[dtData$VariableLabel == '台北市'] $'2')
2
View(dtData[dtData$VariableLabel == '台北市'] $2)
View(dtData[dtData$VariableLabel == '台北市',] $2)
View(dtData[dtData$VariableLabel == '台北市',] $'2')
View(merged_data)
View(merged_data)
View(dtData)
View(dtData[dtData$VariableLabel == '台北市',] $'食品餐飲類博士[筆數]')
食品餐飲類博士', '[筆數]')
View(dtData[dtData$VariableLabel == '台北市',] $paste('食品餐飲類博士', '[筆數]', sep = ""))
paste('食品餐飲類博士', '[筆數]', sep = "")
#View(dtData[dtData$VariableLabel == '台北市', ])
comb <- paste('食品餐飲類博士', '[筆數]', sep = "")
View(dtData[dtData$VariableLabel == '台北市',] $comb)
print(comb)
#View(dtData[dtData$VariableLabel == '台北市', ])
comb <- paste('食品餐飲類博士', '[筆數]', sep = "")
View(dtData[dtData$VariableLabel == '台北市',] $comb)
View(dtData[dtData$VariableLabel == '台北市',] $ toString(comb))
#View(dtData[dtData$VariableLabel == '台北市', ])
comb <- toString(paste('食品餐飲類博士', '[筆數]', sep = ""))
View(dtData[dtData$VariableLabel == '台北市',] $ comb)
#View(dtData[dtData$VariableLabel == '台北市', ])
comb = paste('食品餐飲類博士', '[筆數]', sep = "")
View(dtData[dtData$VariableLabel == '台北市',] $ comb)
View(dtData[dtData$VariableLabel == '台北市',] $ '食品餐飲類博士[筆數]')
#View(dtData[dtData$VariableLabel == '台北市', ])
comb = paste('食品餐飲類博士', '[筆數]', sep = "")
print(comb)
#View(dtData[dtData$VariableLabel == '台北市', ])
comb = paste('食品餐飲類博士', '[筆數]', sep = '')
print(comb)
#View(dtData[dtData$VariableLabel == '台北市', ])
comb =  toString(paste('食品餐飲類博士', '[筆數]', sep = ''), width = 8)
print(comb)
#View(dtData[dtData$VariableLabel == '台北市', ])
comb =  toString(paste('食品餐飲類博士', '[筆數]', sep = ''), width = 12)
print(comb)
#View(dtData[dtData$VariableLabel == '台北市', ])
comb =  toString(paste('食品餐飲類博士', '[筆數]', sep = ''))
print(comb)
View(dtData[dtData$VariableLabel == '台北市',] $ comb)
品餐飲類博士[筆數]"
View(dtData[dtData$VariableLabel == '台北市',] $ "食品餐飲類博士[筆數]")
View(dtData[dtData$VariableLabel == '台北市',] $ "食品餐飲類博士[筆數]")
#View(dtData[dtData$VariableLabel == '台北市', ])
ggg = toString(paste('食品餐飲類博士', '[筆數]', sep = ''))
View(dtData[dtData$VariableLabel == '台北市',] $ ggg)
View(dtData[dtData$VariableLabel == '台北市',] $ '食品餐飲類博士[筆數]')
