choices = c('台北市','新北市', '桃園市', '台中市',
'台南市', '高雄市'))
})
output$linetype <- renderUI({
selectInput("Linetype", "Please Select An Employee Number:",
choices = c('食品餐飲類博士', '2', '3'))
})
output$type <- renderUI({
selectInput("Type", "Please Select An Employee Number:",
choices = c('[筆數]', '[金額，新台幣]'))
})
output$symbol <- renderUI({
if (!is.null(input$Employee)){
selectInput ("Symbol", "Please Select Salary Symbol:",
choices = sort(unique(data[data$EmpNum == input$Employee, ]$Sym)))
}
})
output$myPlot <- renderPlot({
seData  <- dtData[dtData$VariableLabel == input$Employee, 6]
Et  <- ts(seData, start=1,end=61)
plot(seData, col="blue", type="l")
})
})
#View(dtData[dtData$VariableLabel == '台北市', ])
ggg = toString(paste('食品餐飲類博士', '[筆數]', sep = ''))
View(dtData[dtData$VariableLabel == '新北市', 6] )
View(dtData)
dtData = data.frame(data_mct)
View(dtData)
runApp("E:/bank_data_time_series_analyze")
library(xts)
library(Rcpp)
library(shiny)
library(tidyr)
library(dplyr)
library(readxl)
library(stringr)
library(ggplot2)
library(TSstudio)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/ggplot_waterfall.R")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/stat_steamgraph.R")
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","/",date))
return(date)
}
Taipei_convert <- function(city){
city <- gsub("台北市","Taipei",city)
return(city)
}
merged_data = rbind(data_mct, data_loc)
#merged_data[,2] <- apply(merged_data[,2],1,FUN=Taipei_convert)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
N_Taipei <- merged_data[grep("新北市", merged_data$地區), ]
Taoyuan <- merged_data[grep("桃園市", merged_data$地區), ]
Taichung <- merged_data[grep("台中市", merged_data$地區), ]
Tainan <- merged_data[grep("台南市", merged_data$地區), ]
Kaohsiung <- merged_data[grep("高雄市", merged_data$地區), ]
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
N_Taipei[,1] <- apply(N_Taipei[,1],1,FUN=AD_convert)
Taoyuan[,1] <- apply(Taoyuan[,1],1,FUN=AD_convert)
Taichung[,1] <- apply(Taichung[,1],1,FUN=AD_convert)
Tainan[,1] <- apply(Tainan[,1],1,FUN=AD_convert)
Kaohsiung[,1] <- apply(Kaohsiung[,1],1,FUN=AD_convert)
# Convert title to null
#names(Taipei) <- c(1:length(Taipei))
names(Taipei) <- NULL
names(N_Taipei) <- NULL
names(Taoyuan) <- NULL
names(Taichung) <- NULL
names(Tainan) <- NULL
names(Kaohsiung) <- NULL
dtData = data.frame(
Time = 1:61,
Signal =
c(
as.numeric(as.character(unlist(Taipei[1:61, 4]))),
as.numeric(as.character(unlist(N_Taipei[1:61, 4]))),
as.numeric(as.character(unlist(Taoyuan[1:61,4]))),
as.numeric(as.character(unlist(Taichung[1:61, 4]))),
as.numeric(as.character(unlist(Tainan[1:61, 4]))),
as.numeric(as.character(unlist(Kaohsiung[1:61, 4])))
),
VariableLabel = c(rep('台北市', 61),
rep('新北市', 61), rep('桃園市', 61),
rep('台中市', 61), rep('台南市', 61),
rep('高雄市', 61))
)
dtData <- cbind(dtData, data_mct[, 3:86])
dtData = data.frame(data_mct)
shinyServer (
function (input,output,session){
output$employee <- renderUI({
selectInput("Employee", "Please Select An Employee Number:",
choices = c('台北市','新北市', '桃園市', '台中市',
'台南市', '高雄市'))
})
output$linetype <- renderUI({
selectInput("Linetype", "Please Select An Employee Number:",
choices = c('食品餐飲類博士', '2', '3'))
})
output$type <- renderUI({
selectInput("Type", "Please Select An Employee Number:",
choices = c('[筆數]', '[金額，新台幣]'))
})
output$symbol <- renderUI({
if (!is.null(input$Employee)){
selectInput ("Symbol", "Please Select Salary Symbol:",
choices = sort(unique(data[data$'地區' == input$Employee, ]$Sym)))
}
})
output$myPlot <- renderPlot({
seData  <- dtData[dtData$VariableLabel == input$Employee, 6]
Et  <- ts(seData, start=1,end=61)
plot(seData, col="blue", type="l")
})
})
#View(dtData[dtData$VariableLabel == '台北市', ])
ggg = toString(paste('食品餐飲類博士', '[筆數]', sep = ''))
View(dtData[dtData$VariableLabel == '新北市', 6] )
View(dtData)
library(xts)
library(Rcpp)
library(shiny)
library(tidyr)
library(dplyr)
library(readxl)
library(stringr)
library(ggplot2)
library(TSstudio)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/ggplot_waterfall.R")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/stat_steamgraph.R")
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","/",date))
return(date)
}
Taipei_convert <- function(city){
city <- gsub("台北市","Taipei",city)
return(city)
}
merged_data = rbind(data_mct, data_loc)
#merged_data[,2] <- apply(merged_data[,2],1,FUN=Taipei_convert)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
N_Taipei <- merged_data[grep("新北市", merged_data$地區), ]
Taoyuan <- merged_data[grep("桃園市", merged_data$地區), ]
Taichung <- merged_data[grep("台中市", merged_data$地區), ]
Tainan <- merged_data[grep("台南市", merged_data$地區), ]
Kaohsiung <- merged_data[grep("高雄市", merged_data$地區), ]
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
N_Taipei[,1] <- apply(N_Taipei[,1],1,FUN=AD_convert)
Taoyuan[,1] <- apply(Taoyuan[,1],1,FUN=AD_convert)
Taichung[,1] <- apply(Taichung[,1],1,FUN=AD_convert)
Tainan[,1] <- apply(Tainan[,1],1,FUN=AD_convert)
Kaohsiung[,1] <- apply(Kaohsiung[,1],1,FUN=AD_convert)
# Convert title to null
#names(Taipei) <- c(1:length(Taipei))
names(Taipei) <- NULL
names(N_Taipei) <- NULL
names(Taoyuan) <- NULL
names(Taichung) <- NULL
names(Tainan) <- NULL
names(Kaohsiung) <- NULL
dtData = data.frame(
Time = 1:61,
Signal =
c(
as.numeric(as.character(unlist(Taipei[1:61, 4]))),
as.numeric(as.character(unlist(N_Taipei[1:61, 4]))),
as.numeric(as.character(unlist(Taoyuan[1:61,4]))),
as.numeric(as.character(unlist(Taichung[1:61, 4]))),
as.numeric(as.character(unlist(Tainan[1:61, 4]))),
as.numeric(as.character(unlist(Kaohsiung[1:61, 4])))
),
VariableLabel = c(rep('台北市', 61),
rep('新北市', 61), rep('桃園市', 61),
rep('台中市', 61), rep('台南市', 61),
rep('高雄市', 61))
)
dtData <- cbind(dtData, data_mct[, 3:86])
dtData = data.frame(data_mct)
shinyServer (
function (input,output,session){
output$employee <- renderUI({
selectInput("Employee", "Please Select An Employee Number:",
choices = c('台北市','新北市', '桃園市', '台中市',
'台南市', '高雄市'))
})
output$linetype <- renderUI({
selectInput("Linetype", "Please Select An Employee Number:",
choices = c('食品餐飲類博士', '2', '3'))
})
output$type <- renderUI({
selectInput("Type", "Please Select An Employee Number:",
choices = c('[筆數]', '[金額，新台幣]'))
})
output$symbol <- renderUI({
if (!is.null(input$Employee)){
selectInput ("Symbol", "Please Select Salary Symbol:",
choices = sort(unique(data[data$EmpNum == input$Employee, ]$Sym)))
}
})
output$myPlot <- renderPlot({
seData  <- dtData[dtData$'地區' == input$Employee, 6]
Et  <- ts(seData, start=1,end=61)
plot(seData, col="blue", type="l")
})
})
#View(dtData[dtData$VariableLabel == '台北市', ])
ggg = toString(paste('食品餐飲類博士', '[筆數]', sep = ''))
View(dtData[dtData$VariableLabel == '新北市', 6] )
View(dtData)
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
View(dtData[dtData$VariableLabel == '新北市', '食品餐飲類博士[金額，新台幣]'] )
View(dtData[dtData$VariableLabel == '新北市', ] )
View(dtData)
View(dtData[dtData$VariableLabel == '新北市', ] )
View(dtData[dtData$'地區' == '新北市', ] )
View(dtData[dtData$'地區' == '新北市', '食品餐飲類博士金額，新台幣'] )
]
View(dtData[dtData$'地區' == '新北市', '食品餐飲類博士[金額，新台幣]'] )
print(names(dt))
print(names(dtData))
View(dtData[dtData$'地區' == '新北市', '食品餐飲類博士.筆數.'] )
View(dtData[dtData$'地區' == '新北市', ggg] )
#View(dtData[dtData$VariableLabel == '台北市', ])
ggg = toString(paste('食品餐飲類博士.', '筆數.', sep = ''))
View(dtData[dtData$'地區' == '新北市', ggg] )
runApp("E:/bank_data_time_series_analyze")
print(names(dtData))
runApp("E:/bank_data_time_series_analyze")
library(xts)
library(Rcpp)
library(shiny)
library(tidyr)
library(dplyr)
library(readxl)
library(stringr)
library(ggplot2)
library(TSstudio)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/ggplot_waterfall.R")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/stat_steamgraph.R")
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","/",date))
return(date)
}
Taipei_convert <- function(city){
city <- gsub("台北市","Taipei",city)
return(city)
}
merged_data = rbind(data_mct, data_loc)
#merged_data[,2] <- apply(merged_data[,2],1,FUN=Taipei_convert)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
N_Taipei <- merged_data[grep("新北市", merged_data$地區), ]
Taoyuan <- merged_data[grep("桃園市", merged_data$地區), ]
Taichung <- merged_data[grep("台中市", merged_data$地區), ]
Tainan <- merged_data[grep("台南市", merged_data$地區), ]
Kaohsiung <- merged_data[grep("高雄市", merged_data$地區), ]
Taipei[,1] <- apply(Taipei[,1],1,FUN=AD_convert)
N_Taipei[,1] <- apply(N_Taipei[,1],1,FUN=AD_convert)
Taoyuan[,1] <- apply(Taoyuan[,1],1,FUN=AD_convert)
Taichung[,1] <- apply(Taichung[,1],1,FUN=AD_convert)
Tainan[,1] <- apply(Tainan[,1],1,FUN=AD_convert)
Kaohsiung[,1] <- apply(Kaohsiung[,1],1,FUN=AD_convert)
# Convert title to null
#names(Taipei) <- c(1:length(Taipei))
names(Taipei) <- NULL
names(N_Taipei) <- NULL
names(Taoyuan) <- NULL
names(Taichung) <- NULL
names(Tainan) <- NULL
names(Kaohsiung) <- NULL
dtData = data.frame(
Time = 1:61,
Signal =
c(
as.numeric(as.character(unlist(Taipei[1:61, 4]))),
as.numeric(as.character(unlist(N_Taipei[1:61, 4]))),
as.numeric(as.character(unlist(Taoyuan[1:61,4]))),
as.numeric(as.character(unlist(Taichung[1:61, 4]))),
as.numeric(as.character(unlist(Tainan[1:61, 4]))),
as.numeric(as.character(unlist(Kaohsiung[1:61, 4])))
),
VariableLabel = c(rep('台北市', 61),
rep('新北市', 61), rep('桃園市', 61),
rep('台中市', 61), rep('台南市', 61),
rep('高雄市', 61))
)
dtData = data.frame(data_mct)
shinyServer (
function (input,output,session){
output$employee <- renderUI({
selectInput("Employee", "Please Select An Employee Number:",
choices = c('台北市','新北市', '桃園市', '台中市',
'台南市', '高雄市'))
})
output$linetype <- renderUI({
selectInput("Linetype", "Please Select An Employee Number:",
choices = c('食品餐飲類', '衣著飾品類',	'旅館住宿類',
'交通類',	'文教康樂類',		'百貨類', '其他類'))
})
output$educate <- renderUI({
selectInput("Educate", "Please Select An Employee Number:",
choices = c('筆數.', '金額.新台幣.'))
})
output$type <- renderUI({
selectInput("Type", "Please Select An Employee Number:",
choices = c('筆數.', '金額.新台幣.'))
})
})
output$myPlot <- renderPlot({
cp = toString(paste(input$Linetype, input$Type, sep = ''))
seData  <- dtData[dtData$'地區' == input$Employee, cp]
Et  <- ts(seData, start=1,end=61)
plot(seData, col="blue", type="l")
})
})
#View(dtData[dtData$VariableLabel == '台北市', ])
ggg = toString(paste('食品餐飲類博士.', '筆數.', sep = ''))
#View(dtData[dtData$'地區' == '新北市', ggg] )
#print(names(dtData))
#View(dtData)
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
#View(dtData[dtData$'地區' == '新北市', ggg] )
print(names(dtData))
#View(dtData[dtData$'地區' == '新北市', ggg] )
print(names(dtData$'地區'))
#View(dtData[dtData$'地區' == '新北市', ggg] )
print(names(dtData[dtData$'地區']))
#View(dtData[dtData$'地區' == '新北市', ggg] )
print(names(dtData[,3]))
#View(dtData)
dtData
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
install.packages('ggpmisc')
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
library(xts)
library(Rcpp)
library(shiny)
library(tidyr)
library(dplyr)
library(readxl)
library(stringr)
library(ggplot2)
library(TSstudio)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/ggplot_waterfall.R")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/stat_steamgraph.R")
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","/",date))
return(date)
}
Taipei_convert <- function(city){
city <- gsub("台北市","Taipei",city)
return(city)
}
merged_data = rbind(data_mct, data_loc)
#merged_data[,2] <- apply(merged_data[,2],1,FUN=Taipei_convert)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
N_Taipei <- merged_data[grep("新北市", merged_data$地區), ]
Taoyuan <- merged_data[grep("桃園市", merged_data$地區), ]
Taichung <- merged_data[grep("台中市", merged_data$地區), ]
Tainan <- merged_data[grep("台南市", merged_data$地區), ]
Kaohsiung <- merged_data[grep("高雄市", merged_data$地區), ]
options(scipen = 999)
dtData = data.frame(merged_data)
shinyServer (
function (input,output,session){
output$employee <- renderUI({
selectInput("Employee", "Please Select An Employee Number:",
choices = c('台北市','新北市', '桃園市', '台中市',
'台南市', '高雄市',
'基隆市', '新竹市', '新竹縣', '苗栗縣',
'彰化縣', '南投縣', '雲林縣', '嘉義市',
'嘉義縣', '屏東縣', '宜蘭縣', '花蓮縣',
'台東縣', '澎湖縣', '金門縣', '連江縣'
))
})
output$linetype <- renderUI({
selectInput("Linetype", "Please Select An Employee Number:",
choices = c('食品餐飲類', '衣著飾品類',	'旅館住宿類',
'交通類',	'文教康樂類',		'百貨類', '其他類'))
})
output$educate <- renderUI({
selectInput("Educate", "Please Select An Employee Number:",
choices = c('博士.', '碩士.', '大學.', '專科.',
'高中高職.', '其他.'))
})
output$type <- renderUI({
selectInput("Type", "Please Select An Employee Number:",
choices = c('筆數.', '金額.新台幣.'))
})
output$myPlot <- renderPlot({
cp = toString(paste(paste(input$Linetype, input$Educate, sep = ''), input$Type, sep = ''))
seData  <- dtData[dtData$'地區' == input$Employee, cp]
Et  <- ts(seData, start=1,end=61)
plot(seData, col="blue", type="l")
})
})
#View(dtData[dtData$VariableLabel == '台北市', ])
#ggg = toString(paste('食品餐飲類博士.', '筆數.', sep = ''))
#View(dtData[dtData$'地區' == '新北市', ggg] )
#print(names(dtData))
#View(dtData)
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
library(xts)
library(Rcpp)
library(shiny)
library(tidyr)
library(dplyr)
library(readxl)
library(stringr)
library(ggplot2)
library(TSstudio)
library(data.table)
setwd('E:/bank_data_time_series_analyze')
data_loc <- read_excel("BANK_LOC_ALL_EL.xlsx")
data_mct <- read_excel("BANK_MCT_ALL_EL.xlsx")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/ggplot_waterfall.R")
if(!exists("foo", mode="function")) source("E:/bank_data_time_series_analyze/ggTimeSeries-master/R/stat_steamgraph.R")
### change "107年12月" to "107-12"
AD_convert <- function(date){
date <- gsub("月","",gsub("年","/",date))
return(date)
}
Taipei_convert <- function(city){
city <- gsub("台北市","Taipei",city)
return(city)
}
merged_data = rbind(data_mct, data_loc)
#merged_data[,2] <- apply(merged_data[,2],1,FUN=Taipei_convert)
Taipei <- merged_data[grep("台北市", merged_data$地區), ]
N_Taipei <- merged_data[grep("新北市", merged_data$地區), ]
Taoyuan <- merged_data[grep("桃園市", merged_data$地區), ]
Taichung <- merged_data[grep("台中市", merged_data$地區), ]
Tainan <- merged_data[grep("台南市", merged_data$地區), ]
Kaohsiung <- merged_data[grep("高雄市", merged_data$地區), ]
options(scipen = 999)
dtData = data.frame(merged_data)
shinyServer (
function (input,output,session){
output$city <- renderUI({
selectInput("City", "Please Select An Employee Number:",
choices = c('台北市','新北市', '桃園市', '台中市',
'台南市', '高雄市',
'基隆市', '新竹市', '新竹縣', '苗栗縣',
'彰化縣', '南投縣', '雲林縣', '嘉義市',
'嘉義縣', '屏東縣', '宜蘭縣', '花蓮縣',
'台東縣', '澎湖縣', '金門縣', '連江縣'
))
})
output$linetype <- renderUI({
selectInput("Linetype", "Please Select An Employee Number:",
choices = c('食品餐飲類', '衣著飾品類',	'旅館住宿類',
'交通類',	'文教康樂類',		'百貨類', '其他類'))
})
output$educate <- renderUI({
selectInput("Educate", "Please Select An Employee Number:",
choices = c('博士.', '碩士.', '大學.', '專科.',
'高中高職.', '其他.'))
})
output$type <- renderUI({
selectInput("Type", "Please Select An Employee Number:",
choices = c('筆數.', '金額.新台幣.'))
})
output$myPlot <- renderPlot({
cp = toString(paste(paste(input$Linetype, input$Educate, sep = ''), input$Type, sep = ''))
seData  <- dtData[dtData$'地區' == input$City, cp]
Et  <- ts(seData, start=1,end=61)
plot(seData,  col="blue", type="l")
})
})
#View(dtData[dtData$VariableLabel == '台北市', ])
#ggg = toString(paste('食品餐飲類博士.', '筆數.', sep = ''))
#View(dtData[dtData$'地區' == '新北市', ggg] )
#print(names(dtData))
#View(dtData)
runApp("E:/bank_data_time_series_analyze")
runApp("E:/bank_data_time_series_analyze")
